<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Pattern on PhiloBlog</title>
    <link>http://localhost:1313/tags/software-pattern/</link>
    <description>Recent content in Software Pattern on PhiloBlog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 28 Apr 2024 10:20:44 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/software-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event Sourcing for long living projects</title>
      <link>http://localhost:1313/posts/2024-04-event-sourcing/</link>
      <pubDate>Sun, 28 Apr 2024 10:20:44 +0200</pubDate>
      <guid>http://localhost:1313/posts/2024-04-event-sourcing/</guid>
      <description>Event Sourcing is a software pattern for stateful entity management.</description>
    </item>
    <item>
      <title>Symfony Messenger Component step by step</title>
      <link>http://localhost:1313/posts/2024-01-symfony-queues/</link>
      <pubDate>Thu, 01 Feb 2024 10:20:44 +0200</pubDate>
      <guid>http://localhost:1313/posts/2024-01-symfony-queues/</guid>
      <description>How does the Symfony Messenger Component work; How can I hook into the process; and how can I use it for my own needs?</description>
    </item>
    <item>
      <title>The Laravel Queue</title>
      <link>http://localhost:1313/posts/2022-12-queues/</link>
      <pubDate>Sun, 11 Dec 2022 14:20:44 +0200</pubDate>
      <guid>http://localhost:1313/posts/2022-12-queues/</guid>
      <description>After debugging problems with the Serialisation of Classes, I learned I know way too little about Laravel Queues.</description>
    </item>
    <item>
      <title>About Actions, Jobs, Repositories, Events</title>
      <link>http://localhost:1313/posts/2022-07-action-and-other-patterns/</link>
      <pubDate>Sun, 31 Jul 2022 14:20:44 +0200</pubDate>
      <guid>http://localhost:1313/posts/2022-07-action-and-other-patterns/</guid>
      <description>Simple REST APIs are nice.</description>
    </item>
    <item>
      <title>Manager and Driver Pattern - pattern, implementation, and usage</title>
      <link>http://localhost:1313/posts/2022-05-driver-manager-pattern/</link>
      <pubDate>Sun, 22 May 2022 08:13:44 +0200</pubDate>
      <guid>http://localhost:1313/posts/2022-05-driver-manager-pattern/</guid>
      <description>Driver-based Development is a coding pattern that is common in the Laravel world and used in multiple instances in the framework.</description>
    </item>
    <item>
      <title>Model Specific Query Builder - an Alternative to Scopes</title>
      <link>http://localhost:1313/posts/2022-05-custom-query-builder-pattern/</link>
      <pubDate>Sat, 14 May 2022 08:20:44 +0200</pubDate>
      <guid>http://localhost:1313/posts/2022-05-custom-query-builder-pattern/</guid>
      <description>Scopes are nice, but by extending the Eloquent Builder for a Model enables you to add custom, model-specific methods that are often used or should have a central definition Scopes are great, but &amp;hellip; #Local scopes allow you to define common sets of query constraints that you may easily re-use throughout your application; read more in the Laravel Docs.</description>
    </item>
  </channel>
</rss>
